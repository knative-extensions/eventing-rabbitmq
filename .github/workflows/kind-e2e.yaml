name: KinD e2e tests

on:
  push:
    branches: [ 'main', 'release-*' ]
  pull_request:
    branches: [ 'main', 'release-*' ]

jobs:

  ko-resolve:
    name: e2e tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.21.2
        - v1.22.1

        knative-version:
        - 1.0.2
        - 1.1.0

        # Map between K8s and KinD versions.
        # This is attempting to make it a bit clearer what's being tested.
        # See: https://github.com/kubernetes-sigs/kind/releases/tag/v0.11.1
        include:
        - k8s-version: v1.21.2
          kind-image-sha: sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
        - k8s-version: v1.22.1
          kind-image-sha: sha256:b8bda84bb3a190e6e028b1760d277454a72267a5454b57db34437c34a588d047
    env:
      GOPATH: ${{ github.workspace }}

    steps:
    - name: Defaults
      run: |
        if [[ "${{ secrets.SLACK_WEBHOOK }}" != "" ]]; then
          echo "SLACK_WEBHOOK=exists" >> $GITHUB_ENV
        fi

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x

    - name: Check out code onto GOPATH
      uses: actions/checkout@v2
      with:
        path: ./src/knative.dev/${{ github.event.repository.name }}

    - name: Setup a local KIND Cluster with everything that is needed to run tests
      working-directory: ./src/knative.dev/${{ github.event.repository.name }}
      run: |
        make install \
          KIND_K8S_VERSION=${{ matrix.k8s-version }} \
          KIND_K8S_DIGEST=${{ matrix.kind-image-sha }} \
          KNATIVE_VERSION=${{ matrix.knative-version }}

    - name: Run ko publish e2e Tests
      working-directory: ./src/knative.dev/${{ github.event.repository.name }}
      run: |
        make test-e2e-publish

    # Run only Broker specific tests due to large resource requirements of rabbitmqcluster
    - name: Run Broker e2e Tests
      working-directory: ./src/knative.dev/${{ github.event.repository.name }}
      run: |
        make test-e2e-broker

    # Run source test
    - name: Run source e2e Tests
      working-directory: ./src/knative.dev/${{ github.event.repository.name }}
      run: |
        make test-e2e-source

    - name: Gather Failure Data
      if: ${{ failure() }}
      run: |
        set -x

        echo "===================== Brokers =============================="
        kubectl get broker --all-namespaces=true -oyaml

        echo "===================== Triggers ============================="
        kubectl get trigger --all-namespaces=true -oyaml

        echo "===================== RabbitMQClusters ====================="
        kubectl get RabbitMQCluster --all-namespaces=true -oyaml

        echo "===================== RabbitMQ Exchanges ====================="
        kubectl get exchange.rabbitmq.com --all-namespaces=true -oyaml

        echo "===================== RabbitMQ Queues ====================="
        kubectl get queue.rabbitmq.com --all-namespaces=true -oyaml

        echo "===================== RabbitMQ Bindings ====================="
        kubectl get binding.rabbitmq.com --all-namespaces=true -oyaml

        echo "===================== K8s Events ==========================="
        kubectl get events --all-namespaces=true -oyaml

        echo "===================== Pod Logs ============================="
        namespaces=(knative-eventing rabbitmq-system)
        for namespace in ${namespaces[@]}; do
          for pod in $(kubectl get pod -n $namespace | awk '{print $1}'); do
            for container in $(kubectl get pod "${pod}" -n $namespace -ojsonpath='{.spec.containers[*].name}'); do
              echo "Namespace, Pod, Container: ${namespace}, ${pod}, ${container}"
              kubectl logs -n $namespace "${pod}" -c "${container}" || true
              echo "----------------------------------------------------------"
              echo "Namespace, Pod, Container (Previous instance): ${namespace}, ${pod}, ${container}"
              kubectl logs -p -n $namespace "${pod}" -c "${container}" || true
              echo "============================================================"
            done
          done
        done

    - name: Post failure notice to Slack
      # Note: using env.SLACK_WEBHOOK here because secrets are not allowed in the if block.
      if: ${{ env.SLACK_WEBHOOK != '' && failure() && github.event_name != 'pull_request' }}
      uses: rtCamp/action-slack-notify@v2.1.0
      env:
        SLACK_ICON: http://github.com/knative.png?size=48
        SLACK_USERNAME: github-actions
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: 'eventing-delivery'
        MSG_MINIMAL: 'true'
        SLACK_TITLE: Periodic e2e for RabbitMQ on kind on (${{ matrix.k8s-version }}, ${{ matrix.eventing-version }}) failed.
        SLACK_MESSAGE: |
          For detailed logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
